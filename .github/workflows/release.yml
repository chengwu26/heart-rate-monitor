name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  package-themes:
    name: Package Themes
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create themes zip archive
        run: |
          if [ -d "themes" ]; then
            zip -r themes.zip themes/
            echo "Themes archive created successfully"
          else
            echo "Warning: themes directory not found"
            zip empty.zip .
          fi

      - name: Upload themes archive to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./themes.zip
          asset_name: themes.zip
          asset_content_type: application/zip

  build-and-upload:
    name: Build and Upload - ${{ matrix.target }}
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            binary_name: hr-monitor.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            binary_name: hr-monitor
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            deps: "libdbus-1-dev pkg-config"
            binary_name: hr-monitor
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        if: matrix.deps != ''
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.deps }}

      - name: Install Rust and build for target
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      - name: Upload binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ matrix.binary_name }}-${{ matrix.target }}
          asset_content_type: application/octet-stream
